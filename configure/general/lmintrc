if test -n "$SSH_TTY"; then
    # Remote Session
    # alias pbcopy='nc 127.0.0.1 3085'
    if test -f /proc/version && grep -q 'Red Hat' /proc/version; then
        # Red Hat
        alias pbcopy='nc 127.0.0.1 3085'
    elif test -f /proc/version && grep -q Ubuntu /proc/version; then
        # Mint/Ubuntu
        alias pbcopy='nc -q0 127.0.0.1 3085'
    fi
elif test -f /proc/version && grep -q Microsoft /proc/version; then
    # WSL
    alias pbcopy='rstrip | /mnt/c/WINDOWS/system32/clip.exe'
elif test -f /proc/version && grep -q Ubuntu /proc/version; then
    # Mint/Ubuntu
    alias pbcopy='rstrip | xclip -sel clip'
else
    # OSX
    alias pbcopy='rstrip | /usr/bin/pbcopy'
fi

tmux-init () {
    # Starlight
    tmux new-session -d -s Starlight
    if [ $? -eq 0 ]; then
        tmux rename-window Karen
        tmux new-window -d -n Nana
        tmux new-window -d -n Hikari
    fi
    # Franchouchou
    tmux new-session -d -s Franchouchou
    if [ $? -eq 0 ]; then
        tmux rename-window Sakura
        tmux new-window -d -n Ai
        tmux new-window -d -n Junko
    fi
    # Aqoars
    tmux new-session -d -s Aqoars
    if [ $? -eq 0 ]; then
        tmux rename-window Riko
        tmux new-window -d -n Hanamaru
        tmux new-window -d -n You
    fi
}

tmux-alt () {
    # Kiminaru
    tmux new-session -d -s Kiminaru
    if [ $? -eq 0 ]; then
        tmux rename-window Yuu
        tmux new-window -d -n Touko
        tmux new-window -d -n Sayaka
        # tmux split-window -h -p 44
    fi
}

py3init() {
    local venv_path="$HOME/.py3venv/bin/activate"

    if [[ -f "$venv_path" ]]; then
        source "$venv_path"
    fi
}

alias ts0='ts '\''[%Y-%m-%d %H:%M:%S]'\'''

alias roll='od -N1 -An -i /dev/random'

alias vim14='vim -u ~/.vimrc14'

alias rstrip='python3 -c "import sys; sys.stdout.write(sys.stdin.read().rstrip())"'

alias atcpp='/opt/homebrew/opt/llvm@16/bin/clang++ -std=c++20 -Wall -Wextra -O2 -DONLINE_JUDGE -DATCODER -mtune=native -march=native -fconstexpr-depth=2147483647 -fconstexpr-steps=2147483647 -I/opt/homebrew/opt/boost/include -L/opt/homebrew/opt/boost/lib -I/opt/ac-library -I/opt/homebrew/opt/eigen/include -fuse-ld=lld -o a'

alias cfcpp='g++-11 -Wall -Wextra -Wconversion -DONLINE_JUDGE -O2 -std=c++20 -o a'

alias tcarena='javaws ~/apps/tcarena/ContestAppletProd.jnlp >/dev/null 2>&1 &'

alias urldecode="python3 -c \"import sys; from urllib.parse import unquote; \
sys.stdout.write(unquote(sys.stdin.read()))\""

alias htmlescape="python3 -c \"import sys; from html import escape; \
sys.stdout.write(escape(sys.stdin.read()))\""

alias htmlunescape="python3 -c \"import sys; from html import unescape; \
sys.stdout.write(unescape(sys.stdin.read()))\""

alias spaceescape="python3 -c \"import sys; \
sys.stdout.write(sys.stdin.read().replace(' ', '\ '))\""

alias xmlformat="python3 -c \"import sys;from xml.dom import minidom; \
sys.stdout.write(minidom.parseString(sys.stdin.read()).toprettyxml('  '))\""

# vi: set syntax=sh:
